#BlueJ class context
comment0.target=Pathfinding
comment0.text=\r\n\ pathfinding\ ability\ for\ alien\r\n\ creates\ a\ path\ for\ alien\ to\ follow\ and\ stores\ directions\ to\ get\ there\r\n\ uses\ breadth\ first\ search\ algorithm\ to\ calculate\ path\r\n
comment1.params=start\ finish\ grid\ vents
comment1.target=Pathfinding(Tile,\ Tile,\ Tile[][],\ boolean)
comment1.text=\r\n\ constructor\ initilizes\ instance\ vairables\r\n\ creates\ path\r\n
comment10.params=
comment10.target=void\ incrementIndex()
comment10.text=\r\n\ increments\ index\ (negativly\ because\ we\ backtracked\ in\ the\ path\ algorithm)\r\n
comment11.params=
comment11.target=boolean\ indexReached()
comment11.text=\r\n\ returns\ true\ if\ path\ is\ complete\r\n
comment2.params=objectFrom\ objectTo
comment2.target=int[]\ findDirection(Tile,\ Tile)
comment2.text=\r\n\ returns\ the\ direction\ from\ one\ cell\ to\ an\ adjecent\ cell\r\n
comment3.params=x\ y
comment3.target=Tile\ isValid(int,\ int)
comment3.text=\r\n\ returns\ if\ the\ cell\ at\ a\ position\ is\ valid\ for\ alien\ to\ cross\r\n\ ie\ if\ it\ is\ a\ passage,\ door,\ locked\ door\ that\ is\ unlocked\ or\ vent\ (only\ if\ the\ alien\ has\ spotted\ player)\r\n
comment4.params=object
comment4.target=java.util.ArrayList\ findNeighbours(Tile)
comment4.text=\r\n\ finds\ adjacent\ Tile\ -including\ diagonals\ -only\ if\ they\ can\ be\ reached\ (ie\ the\ 2\ adjacent\ squares\ also\ being\ passed\ in\ are\ also\ clear)\r\n
comment5.params=array\ element
comment5.target=int[]\ getIndex(java.lang.Object[][],\ java.lang.Object)
comment5.text=\r\n\ algorithm\ finds\ index\ of\ element\ within\ a\ 2D\ array\r\n
comment6.params=array
comment6.target=void\ printArray(java.lang.Object[][])
comment6.text=\r\n\ algorithm\ prints\ 2D\ array\ to\ console\ in\ ledgible\ way\ (used\ in\ development)\r\n
comment7.params=start\ finish
comment7.target=void\ pathfind(Tile,\ Tile)
comment7.text=\r\n\ creates\ path\ using\ breadth\ first\ search\r\n\ (starting\ at\ one\ location\ and\ moving\ to\ every\ adjacent\ location\ until\ exit\ is\ reached\ then\ backtracking\ to\ find\ quickest\ path)\r\n
comment8.params=
comment8.target=Tile\ getPath()
comment8.text=\r\n\ returns\ path\ at\ the\ current\ index\r\n
comment9.params=
comment9.target=int[]\ getDirection()
comment9.text=\r\n\ returns\ direction\ at\ current\ index\r\n
numComments=12
